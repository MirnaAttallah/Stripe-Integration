// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stripe_Integration.Context;

#nullable disable

namespace Stripe_Integration.Migrations
{
    [DbContext(typeof(StripeDbContext))]
    [Migration("20250908094106_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Stripe_Integration.Models.ServiceDetails", b =>
                {
                    b.Property<int>("ServiceDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceDetailID"));

                    b.Property<string>("DetailItemDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("MonthlyCount")
                        .HasColumnType("int");

                    b.Property<string>("ServiceCodedDetails")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ServiceMainID")
                        .HasColumnType("int");

                    b.Property<string>("ServiceTypeID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("UserDisplay")
                        .HasColumnType("bit");

                    b.Property<int?>("ValidForMonths")
                        .HasColumnType("int");

                    b.HasKey("ServiceDetailID");

                    b.HasIndex("ServiceMainID");

                    b.HasIndex("ServiceTypeID");

                    b.ToTable("ServiceDetails");
                });

            modelBuilder.Entity("Stripe_Integration.Models.ServiceMain", b =>
                {
                    b.Property<int>("ServiceMainID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceMainID"));

                    b.Property<string>("PlanID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PlanType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ServiceMainID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Stripe_Integration.Models.ServiceType", b =>
                {
                    b.Property<string>("ServiceTypeID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ServiceTypeID");

                    b.ToTable("ServiceTypes");
                });

            modelBuilder.Entity("Stripe_Integration.Models.User", b =>
                {
                    b.Property<string>("B2CSubID")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("B2CSubID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Stripe_Integration.Models.UserPlan", b =>
                {
                    b.Property<int>("UserPlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserPlanID"));

                    b.Property<string>("B2CSubID")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceMainID")
                        .HasColumnType("int");

                    b.Property<string>("StripeCustomerID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StripeInvoiceID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StripePaymentIntentID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StripeStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StripeSubscriptionID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("UserPlanID");

                    b.HasIndex("B2CSubID");

                    b.HasIndex("ServiceMainID");

                    b.ToTable("UserPlans");
                });

            modelBuilder.Entity("Stripe_Integration.Models.UserServiceUsage", b =>
                {
                    b.Property<int>("UsageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsageID"));

                    b.Property<DateTime>("AddedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUsageDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RemainingBalance")
                        .HasColumnType("int");

                    b.Property<int>("ServiceDetailID")
                        .HasColumnType("int");

                    b.Property<int>("UserPlanID")
                        .HasColumnType("int");

                    b.HasKey("UsageID");

                    b.HasIndex("ServiceDetailID");

                    b.HasIndex("UserPlanID");

                    b.ToTable("UserServiceUsages");
                });

            modelBuilder.Entity("Stripe_Integration.Models.ServiceDetails", b =>
                {
                    b.HasOne("Stripe_Integration.Models.ServiceMain", "ServicesMain")
                        .WithMany("ServiceDetails")
                        .HasForeignKey("ServiceMainID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Stripe_Integration.Models.ServiceType", "ServiceType")
                        .WithMany("ServicesDetails")
                        .HasForeignKey("ServiceTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceType");

                    b.Navigation("ServicesMain");
                });

            modelBuilder.Entity("Stripe_Integration.Models.UserPlan", b =>
                {
                    b.HasOne("Stripe_Integration.Models.User", "User")
                        .WithMany("Plans")
                        .HasForeignKey("B2CSubID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stripe_Integration.Models.ServiceMain", "ServicesMain")
                        .WithMany("UserPlans")
                        .HasForeignKey("ServiceMainID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ServicesMain");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Stripe_Integration.Models.UserServiceUsage", b =>
                {
                    b.HasOne("Stripe_Integration.Models.ServiceDetails", "ServicesDetail")
                        .WithMany("UserServiceUsages")
                        .HasForeignKey("ServiceDetailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stripe_Integration.Models.UserPlan", "UserPlan")
                        .WithMany("UserServiceUsages")
                        .HasForeignKey("UserPlanID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ServicesDetail");

                    b.Navigation("UserPlan");
                });

            modelBuilder.Entity("Stripe_Integration.Models.ServiceDetails", b =>
                {
                    b.Navigation("UserServiceUsages");
                });

            modelBuilder.Entity("Stripe_Integration.Models.ServiceMain", b =>
                {
                    b.Navigation("ServiceDetails");

                    b.Navigation("UserPlans");
                });

            modelBuilder.Entity("Stripe_Integration.Models.ServiceType", b =>
                {
                    b.Navigation("ServicesDetails");
                });

            modelBuilder.Entity("Stripe_Integration.Models.User", b =>
                {
                    b.Navigation("Plans");
                });

            modelBuilder.Entity("Stripe_Integration.Models.UserPlan", b =>
                {
                    b.Navigation("UserServiceUsages");
                });
#pragma warning restore 612, 618
        }
    }
}
